/*
 * ==========================================================================
 * Copyright (C) 2019-2022 HCL America, Inc. ( http://www.hcl.com/ )
 *                            All rights reserved.
 * ==========================================================================
 * Licensed under the  Apache License, Version 2.0  (the "License").  You may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>.
 *
 * Unless  required  by applicable  law or  agreed  to  in writing,  software
 * distributed under the License is distributed on an  "AS IS" BASIS, WITHOUT
 * WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the  specific language  governing permissions  and limitations
 * under the License.
 * ==========================================================================
 */
package com.hcl.domino.jna.internal.structs;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesAdminpRequestProfileStruct extends Structure {
	/** C type : const char* */
	public Pointer chItemNamePtr;
	public short wItemFlags;
	public short wDataType;
	/** C type : const void* */
	public Pointer vDataPtr;
	public short wDataSize;
	
	public NotesAdminpRequestProfileStruct() {
		super();
	}
	
	public static NotesAdminpRequestProfileStruct newInstance() {
		return AccessController.doPrivileged((PrivilegedAction<NotesAdminpRequestProfileStruct>) () -> new NotesAdminpRequestProfileStruct());
	}

	@SuppressWarnings("nls")
  @Override
  protected List<String> getFieldOrder() {
		return Arrays.asList("chItemNamePtr", "wItemFlags", "wDataType", "vDataPtr", "wDataSize");
	}
	
	/**
	 * @param chItemNamePtr C type : const char*<br>
	 * @param wItemFlags C type : WORD
	 * @param wDataType C type : WORD
	 * @param vDataPtr C type : const void*
	 * @param wDataSize C type : WORD
	 */
	public NotesAdminpRequestProfileStruct(Pointer chItemNamePtr, short wItemFlags, short wDataType, Pointer vDataPtr, short wDataSize) {
		super();
		this.chItemNamePtr = chItemNamePtr;
		this.wItemFlags = wItemFlags;
		this.wDataType = wDataType;
		this.vDataPtr = vDataPtr;
		this.wDataSize = wDataSize;
	}
	
	public NotesAdminpRequestProfileStruct(Pointer peer) {
		super(peer);
	}
	
	public static NotesAdminpRequestProfileStruct newInstance(Pointer peer) {
		return AccessController.doPrivileged((PrivilegedAction<NotesAdminpRequestProfileStruct>) () -> new NotesAdminpRequestProfileStruct(peer));
	}

	public static class ByReference extends NotesAdminpRequestProfileStruct implements Structure.ByReference {
		
	};
	
	public static NotesAdminpRequestProfileStruct.ByReference newInstanceByReference() {
		return AccessController.doPrivileged((PrivilegedAction<NotesAdminpRequestProfileStruct.ByReference>) () -> new NotesAdminpRequestProfileStruct.ByReference());
	}

	public static class ByValue extends NotesAdminpRequestProfileStruct implements Structure.ByValue {
		
	};
}
