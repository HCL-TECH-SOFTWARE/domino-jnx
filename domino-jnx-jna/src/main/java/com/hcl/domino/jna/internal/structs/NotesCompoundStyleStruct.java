/*
 * ==========================================================================
 * Copyright (C) 2019-2021 HCL America, Inc. ( http://www.hcl.com/ )
 *                            All rights reserved.
 * ==========================================================================
 * Licensed under the  Apache License, Version 2.0  (the "License").  You may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>.
 *
 * Unless  required  by applicable  law or  agreed  to  in writing,  software
 * distributed under the License is distributed on an  "AS IS" BASIS, WITHOUT
 * WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the  specific language  governing permissions  and limitations
 * under the License.
 * ==========================================================================
 */
package com.hcl.domino.jna.internal.structs;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesCompoundStyleStruct extends BaseStructure {
	/** paragraph justification type */
	public short JustifyMode;
	/** Line spacing */
	public short LineSpacing;
	/** # units above paragraph */
	public short ParagraphSpacingBefore;
	/** # units below paragraph */
	public short ParagraphSpacingAfter;
	/** leftmost margin in twips */
	public short LeftMargin;
	/** rightmost margin in twips */
	public short RightMargin;
	/** leftmost margin on first line */
	public short FirstLineLeftMargin;
	/** # tab stops in table */
	public short Tabs;
	/**
	 * table of tab stops<br>
	 * C type : signed short[20]
	 */
	public short[] Tab = new short[20];
	/** paragraph attribute flags */
	public short Flags;
	
	public NotesCompoundStyleStruct() {
		super();
	}
	
	public static NotesCompoundStyleStruct newInstance() {
		return AccessController.doPrivileged((PrivilegedAction<NotesCompoundStyleStruct>) () -> new NotesCompoundStyleStruct());
	}

	@Override
	protected List<String> getFieldOrder() {
		return Arrays.asList(
			"JustifyMode", //$NON-NLS-1$
			"LineSpacing", //$NON-NLS-1$
			"ParagraphSpacingBefore", //$NON-NLS-1$
			"ParagraphSpacingAfter", //$NON-NLS-1$
			"LeftMargin", //$NON-NLS-1$
			"RightMargin", //$NON-NLS-1$
			"FirstLineLeftMargin", //$NON-NLS-1$
			"Tabs", //$NON-NLS-1$
			"Tab", //$NON-NLS-1$
			"Flags" //$NON-NLS-1$
		);
	}
	
	public NotesCompoundStyleStruct(Pointer peer) {
		super(peer);
	}
	
	public static NotesCompoundStyleStruct newInstance(final Pointer peer) {
		return AccessController.doPrivileged((PrivilegedAction<NotesCompoundStyleStruct>) () -> new NotesCompoundStyleStruct(peer));
	}

	public static class ByReference extends NotesCompoundStyleStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesCompoundStyleStruct implements Structure.ByValue {
		
	};
}
