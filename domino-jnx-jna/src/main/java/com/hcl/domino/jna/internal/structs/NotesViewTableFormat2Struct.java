/*
 * ==========================================================================
 * Copyright (C) 2019-2021 HCL America, Inc. ( http://www.hcl.com/ )
 *                            All rights reserved.
 * ==========================================================================
 * Licensed under the  Apache License, Version 2.0  (the "License").  You may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>.
 *
 * Unless  required  by applicable  law or  agreed  to  in writing,  software
 * distributed under the License is distributed on an  "AS IS" BASIS, WITHOUT
 * WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the  specific language  governing permissions  and limitations
 * under the License.
 * ==========================================================================
 */
package com.hcl.domino.jna.internal.structs;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesViewTableFormat2Struct extends BaseStructure {
	/** Length of this structure */
	public short Length;
	/** Color of view's background */
	public short BackgroundColor;
	/** Color of view's border lines */
	public short V2BorderColor;
	/** Title and borders */
	public int TitleFont;
	/** Unread lines */
	public int UnreadFont;
	/** Totals/Statistics */
	public int TotalsFont;
	/**
	 * Interval b/w auto updates <br>
	 * (zero for no autoupdate)
	 */
	public short AutoUpdateSeconds;
	/**
	 * Color of view's background for<br>
	 * alternate rows.
	 */
	public short AlternateBackgroundColor;
	/** see VALID_VIEW_FORMAT_SIG */
	public short wSig;
	/**
	 * Number of lines per row.  1, 2, etc.<br>
	 * see VIEW_TABLE_MAX_LINE_COUNT
	 */
	public byte LineCount;
	/** Spacing. see VIEW_TABLE_xxx_SPACE */
	public byte Spacing;
	/** Palette Color of view's background. */
	public short BackgroundColorExt;
	/** Lines per header. */
	public byte HeaderLineCount;
	/** see VIEW_TABLE_xxx */
	public byte Flags1;
	/**
	 * Spares.  Will be zero when<br>
	 * wSig == VALID_VIEW_FORMAT_SIG.<br>
	 * C type : WORD[4]
	 */
	public short[] Spare = new short[4];
	public NotesViewTableFormat2Struct() {
		super();
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesViewTableFormat2Struct newInstance() {
		return AccessController.doPrivileged((PrivilegedAction<NotesViewTableFormat2Struct>) () -> new NotesViewTableFormat2Struct());
	}

	@Override
	protected List<String> getFieldOrder() {
		return Arrays.asList(
			"Length", //$NON-NLS-1$
			"BackgroundColor", //$NON-NLS-1$
			"V2BorderColor", //$NON-NLS-1$
			"TitleFont", //$NON-NLS-1$
			"UnreadFont", //$NON-NLS-1$
			"TotalsFont", //$NON-NLS-1$
			"AutoUpdateSeconds", //$NON-NLS-1$
			"AlternateBackgroundColor", //$NON-NLS-1$
			"wSig", //$NON-NLS-1$
			"LineCount", //$NON-NLS-1$
			"Spacing", //$NON-NLS-1$
			"BackgroundColorExt", //$NON-NLS-1$
			"HeaderLineCount", //$NON-NLS-1$
			"Flags1", //$NON-NLS-1$
			"Spare" //$NON-NLS-1$
		);
	}
	public NotesViewTableFormat2Struct(Pointer peer) {
		super(peer);
		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static NotesViewTableFormat2Struct newInstance(final Pointer peer) {
		return AccessController.doPrivileged((PrivilegedAction<NotesViewTableFormat2Struct>) () -> new NotesViewTableFormat2Struct(peer));
	}

	public static class ByReference extends NotesViewTableFormat2Struct implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesViewTableFormat2Struct implements Structure.ByValue {
		
	};
}
