/*
 * ==========================================================================
 * Copyright (C) 2019-2021 HCL America, Inc. ( http://www.hcl.com/ )
 *                            All rights reserved.
 * ==========================================================================
 * Licensed under the  Apache License, Version 2.0  (the "License").  You may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>.
 *
 * Unless  required  by applicable  law or  agreed  to  in writing,  software
 * distributed under the License is distributed on an  "AS IS" BASIS, WITHOUT
 * WARRANTIES OR  CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the  specific language  governing permissions  and limitations
 * under the License.
 * ==========================================================================
 */
package com.hcl.domino.jna.internal.structs;

import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 * <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 * <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesTableItemLargeStruct extends BaseStructure {
	/** length of the item's name */
	public short NameLength;
	/** can't have padding for inplace ods to host */
	public short filler;
	/** length of the value field */
	public int ValueLength;

	public NotesTableItemLargeStruct() {
		super();
	}

	public static NotesTableItemLargeStruct newInstance() {
		return AccessController
				.doPrivileged((PrivilegedAction<NotesTableItemLargeStruct>) () -> new NotesTableItemLargeStruct());
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("NameLength", "filler", "ValueLength");
	}

	/**
	 * @param NameLength  length of the item's name<br>
	 * @param filler      can't have padding for inplace ods to host<br>
	 * @param ValueLength length of the value field
	 */
	public NotesTableItemLargeStruct(short NameLength, short filler, int ValueLength) {
		super();
		this.NameLength = NameLength;
		this.filler = filler;
		this.ValueLength = ValueLength;
	}

	public NotesTableItemLargeStruct(Pointer peer) {
		super(peer);
	}

	public static NotesTableItemLargeStruct newInstance(Pointer peer) {
		return AccessController
				.doPrivileged((PrivilegedAction<NotesTableItemLargeStruct>) () -> new NotesTableItemLargeStruct(peer));
	}

	public static class ByReference extends NotesTableItemLargeStruct implements Structure.ByReference {

	};

	public static NotesTableItemLargeStruct.ByReference newInstanceByReference() {
		return AccessController.doPrivileged(
				(PrivilegedAction<NotesTableItemLargeStruct.ByReference>) () -> new NotesTableItemLargeStruct.ByReference());
	}

	public static class ByValue extends NotesTableItemLargeStruct implements Structure.ByValue {

	};
}
